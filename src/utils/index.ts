import { images, assets, sounds } from "@/config";
import { tg } from "@/api/telegram";
import * as htmlToImage from "html-to-image";

const assetLibrary = { ...images, ...assets, ...sounds };

const specialSymbols = {
  "<bolt>":
    '<svg width="17" height="18" fill="none" xmlns="http://www.w3.org/2000/svg"><circle cx="8.5" cy="9.5" r="8.5" fill="#FEAC3E"/><path d="M9.092 5.624c.752 0 1.348.064 1.788.192.448.12.768.336.96.648.192.312.288.752.288 1.32 0 .592-.116 1.044-.348 1.356-.224.304-.604.48-1.14.528v.072c.656.056 1.112.272 1.368.648.264.368.396.884.396 1.548 0 .568-.104 1.008-.312 1.32-.2.312-.516.532-.948.66-.424.12-.976.18-1.656.18-.568 0-1.068-.004-1.5-.012-.424 0-.816-.008-1.176-.024A59.747 59.747 0 0 1 5.72 14l.18-1.512c.208.008.596.016 1.164.024.576.008 1.248.012 2.016.012.288 0 .508-.024.66-.072a.504.504 0 0 0 .324-.312c.064-.152.096-.368.096-.648 0-.296-.032-.524-.096-.684a.54.54 0 0 0-.336-.324c-.152-.064-.376-.096-.672-.096H5.888V9.032h3.144c.248 0 .44-.024.576-.072a.468.468 0 0 0 .288-.276c.056-.136.084-.332.084-.588 0-.248-.028-.436-.084-.564a.472.472 0 0 0-.3-.264c-.144-.048-.348-.072-.612-.072h-1.26c-.36-.008-.688-.008-.984 0-.288 0-.568.012-.84.036L5.72 5.72c.344-.032.676-.052.996-.06.32-.016.672-.024 1.056-.024.384-.008.824-.012 1.32-.012Zm-1.176.096V14H5.72V5.72h2.196Z" fill="#222"/></svg>',
  "<bolt_dark>":
    '<svg width="17" height="18" viewBox="0 0 17 18" fill="none" xmlns="http://www.w3.org/2000/svg"><circle cx="8.5" cy="9.5" r="8.5" fill="#333333"/><path d="M9.092 5.624C9.844 5.624 10.44 5.688 10.88 5.816C11.328 5.936 11.648 6.152 11.84 6.464C12.032 6.776 12.128 7.216 12.128 7.784C12.128 8.376 12.012 8.828 11.78 9.14C11.556 9.444 11.176 9.62 10.64 9.668V9.74C11.296 9.796 11.752 10.012 12.008 10.388C12.272 10.756 12.404 11.272 12.404 11.936C12.404 12.504 12.3 12.944 12.092 13.256C11.892 13.568 11.576 13.788 11.144 13.916C10.72 14.036 10.168 14.096 9.488 14.096C8.92 14.096 8.42 14.092 7.988 14.084C7.564 14.084 7.172 14.076 6.812 14.06C6.46 14.044 6.096 14.024 5.72 14L5.9 12.488C6.108 12.496 6.496 12.504 7.064 12.512C7.64 12.52 8.312 12.524 9.08 12.524C9.368 12.524 9.588 12.5 9.74 12.452C9.9 12.396 10.008 12.292 10.064 12.14C10.128 11.988 10.16 11.772 10.16 11.492C10.16 11.196 10.128 10.968 10.064 10.808C10 10.648 9.888 10.54 9.728 10.484C9.576 10.42 9.352 10.388 9.056 10.388H5.888V9.032H9.032C9.28 9.032 9.472 9.008 9.608 8.96C9.744 8.912 9.84 8.82 9.896 8.684C9.952 8.548 9.98 8.352 9.98 8.096C9.98 7.848 9.952 7.66 9.896 7.532C9.84 7.404 9.74 7.316 9.596 7.268C9.452 7.22 9.248 7.196 8.984 7.196C8.504 7.196 8.084 7.196 7.724 7.196C7.364 7.188 7.036 7.188 6.74 7.196C6.452 7.196 6.172 7.208 5.9 7.232L5.72 5.72C6.064 5.688 6.396 5.668 6.716 5.66C7.036 5.644 7.388 5.636 7.772 5.636C8.156 5.628 8.596 5.624 9.092 5.624ZM7.916 5.72V14H5.72V5.72H7.916Z" fill="#FEAC3E"/></svg>',
  "<nut>":
    '<svg width="17" height="18" fill="none" xmlns="http://www.w3.org/2000/svg"><circle cx="8.5" cy="9.5" r="8.5" fill="url(#a)"/><path d="M12.052 5.72v7.488c0 .528-.26.792-.78.792h-1.008c-.24 0-.42-.056-.54-.168a2.244 2.244 0 0 1-.348-.492L7.348 9.812c-.096-.2-.192-.416-.288-.648a5.977 5.977 0 0 1-.24-.696h-.108c.032.232.056.472.072.72.024.24.036.472.036.696V14h-2.1V6.512c0-.528.264-.792.792-.792h.996c.24 0 .416.056.528.168.112.112.232.276.36.492L9.34 9.776c.112.192.22.404.324.636.104.232.204.476.3.732h.108a24.564 24.564 0 0 1-.06-.732c-.016-.24-.024-.48-.024-.72L9.976 5.72h2.076Z" fill="#fff"/><defs><linearGradient id="a" x1="5.368" y1="1.895" x2="14.316" y2="17.105" gradientUnits="userSpaceOnUse"><stop stop-color="#424FD2"/><stop offset="1" stop-color="#680A89"/></linearGradient></defs></svg>',
  "<ton>":
    '<svg width="17" height="17" viewBox="0 0 17 17" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_2196_1974)"><path d="M8.5 17C13.1944 17 17 13.1944 17 8.5C17 3.80557 13.1944 0 8.5 0C3.80557 0 0 3.80557 0 8.5C0 13.1944 3.80557 17 8.5 17Z" fill="#0098EA"/><path d="M11.4023 4.74414H5.59745C4.53016 4.74414 3.85368 5.89544 4.39063 6.82615L7.97314 13.0356C8.20692 13.4411 8.79278 13.4411 9.02656 13.0356L12.6098 6.82615C13.146 5.89692 12.4695 4.74414 11.403 4.74414H11.4023ZM7.97023 11.1735L7.19002 9.66352L5.30745 6.29651C5.18326 6.08101 5.33665 5.80485 5.59672 5.80485H7.9695V11.1742L7.97023 11.1735ZM11.6908 6.29579L9.80896 9.66424L9.02875 11.1735V5.80412H11.4015C11.6616 5.80412 11.815 6.08028 11.6908 6.29579Z" fill="white"/></g><defs><clipPath id="clip0_2196_1974"><rect width="17" height="17" fill="white"/></clipPath></defs></svg>',
  "<ads>":
    '<svg width="18" height="17" viewBox="0 0 18 17" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M9.44678 17C14.1412 17 17.9468 13.1944 17.9468 8.5C17.9468 3.80558 14.1412 0 9.44678 0C4.75236 0 0.946777 3.80558 0.946777 8.5C0.946777 13.1944 4.75236 17 9.44678 17Z" fill="#C75C5C"/><path d="M6.31238 7.96875H5.24988V9.03125H6.31238V7.96875Z" fill="#4F5D73"/><path d="M6.31238 9.82812H5.24988V10.8906H6.31238V9.82812Z" fill="#4F5D73"/><path d="M6.31238 11.6875H5.24988V12.75H6.31238V11.6875Z" fill="#4F5D73"/><path d="M6.31238 6.10938H5.24988V7.17188H6.31238V6.10938Z" fill="#4F5D73"/><path d="M6.31238 4.25H5.24988V5.3125H6.31238V4.25Z" fill="#4F5D73"/><path d="M13.7499 7.96875H12.6874V9.03125H13.7499V7.96875Z" fill="#4F5D73"/><path d="M13.7499 9.82812H12.6874V10.8906H13.7499V9.82812Z" fill="#4F5D73"/><path d="M13.7499 11.6875H12.6874V12.75H13.7499V11.6875Z" fill="#4F5D73"/><path d="M13.7499 6.10938H12.6874V7.17188H13.7499V6.10938Z" fill="#4F5D73"/><path d="M13.7499 4.25H12.6874V5.3125H13.7499V4.25Z" fill="#4F5D73"/><path d="M11.6249 4.25H7.37488V7.96875H11.6249V4.25Z" fill="#4F5D73"/><path d="M11.6249 9.03125H7.37488V12.75H11.6249V9.03125Z" fill="#4F5D73"/><g opacity="0.2"><path d="M13.7499 3.71875H5.24988C4.6655 3.71875 4.18738 4.19687 4.18738 4.78125V13.2812C4.18738 13.8656 4.6655 14.3438 5.24988 14.3438H13.7499C14.3343 14.3438 14.8124 13.8656 14.8124 13.2812V4.78125C14.8124 4.19687 14.3343 3.71875 13.7499 3.71875ZM6.31238 13.2812H5.24988V12.2188H6.31238V13.2812ZM6.31238 11.4219H5.24988V10.3594H6.31238V11.4219ZM6.31238 9.5625H5.24988V8.5H6.31238V9.5625ZM6.31238 7.70312H5.24988V6.64062H6.31238V7.70312ZM6.31238 5.84375H5.24988V4.78125H6.31238V5.84375ZM11.6249 13.2812H7.37488V9.5625H11.6249V13.2812ZM11.6249 8.5H7.37488V4.78125H11.6249V8.5ZM13.7499 13.2812H12.6874V12.2188H13.7499V13.2812ZM13.7499 11.4219H12.6874V10.3594H13.7499V11.4219ZM13.7499 9.5625H12.6874V8.5H13.7499V9.5625ZM13.7499 7.70312H12.6874V6.64062H13.7499V7.70312ZM13.7499 5.84375H12.6874V4.78125H13.7499V5.84375Z" fill="#231F20"/></g><path d="M13.7499 3.1875H5.24988C4.6655 3.1875 4.18738 3.66562 4.18738 4.25V12.75C4.18738 13.3344 4.6655 13.8125 5.24988 13.8125H13.7499C14.3343 13.8125 14.8124 13.3344 14.8124 12.75V4.25C14.8124 3.66562 14.3343 3.1875 13.7499 3.1875ZM6.31238 12.75H5.24988V11.6875H6.31238V12.75ZM6.31238 10.8906H5.24988V9.82812H6.31238V10.8906ZM6.31238 9.03125H5.24988V7.96875H6.31238V9.03125ZM6.31238 7.17188H5.24988V6.10938H6.31238V7.17188ZM6.31238 5.3125H5.24988V4.25H6.31238V5.3125ZM11.6249 12.75H7.37488V9.03125H11.6249V12.75ZM11.6249 7.96875H7.37488V4.25H11.6249V7.96875ZM13.7499 12.75H12.6874V11.6875H13.7499V12.75ZM13.7499 10.8906H12.6874V9.82812H13.7499V10.8906ZM13.7499 9.03125H12.6874V7.96875H13.7499V9.03125ZM13.7499 7.17188H12.6874V6.10938H13.7499V7.17188ZM13.7499 5.3125H12.6874V4.25H13.7499V5.3125Z" fill="#E0E0D1"/></svg>',
};

export const getAsset = (name) => {
  if (!assetLibrary[name]) {
    console.error(`Asset not found: ${name}`);
    return;
  }

  if (assetLibrary[name].split("/")[0] === "assets") {
    return getAssetURL(assetLibrary[name]);
  } else {
    return assetLibrary[name];
  }
};

export const getAssetURL = (url) => {
  return new URL(`../${url}`, import.meta.url).href;
};

export const showFormattedNumber = (number) => new Intl.NumberFormat("en-US", { style: "decimal" }).format(Math.round(number));

export const waitFor = (ms: number) => {
  return new Promise((res) => {
    setTimeout(() => {
      res(true);
    }, ms);
  });
};

export const shortenNumber = (num?: number) => {
  if (!num) return 0;
  if (num <= 999999) {
    return showFormattedNumber(num);
  } else {
    return showFormattedNumber(Math.round(num).toString().slice(0, -3)) + "K";
  }
};

export const formattedTime = (timer: number) => {
  if (!timer) return "00:00";

  if (timer < 60000) {
    let roundedTimer = Math.round(timer / 1000);

    if (roundedTimer < 0) {
      roundedTimer = 0;
    }

    if (timer > 9000) {
      return "00:" + roundedTimer;
    } else {
      return "00:0" + roundedTimer;
    }
  } else {
    const min = Math.trunc(timer / 60000);
    let sec = Math.round((timer % 60000) / 1000) + "";
    if (sec.length === 1) {
      sec = "0" + sec;
    }
    return "0" + min + ":" + sec;
  }
};

export const replaceWithSpecialSymbols = (text?: string) => {
  if (!text) return "";
  let result = text;

  Object.keys(specialSymbols).forEach((symbol) => {
    result = result.replace(new RegExp(symbol), specialSymbols[symbol]);
  });

  return result;
};

export const sliceTextAmount = (text: string, charLength?: number) => {
  if (!charLength || text.length <= charLength) return text;
  return text.slice(0, charLength) + "...";
};

export const takeScreenshot = async (element: HTMLElement) => {
  console.log(`taking screenshot`);
  const result = await htmlToImage.toJpeg(element, { quality: 0.85 });
  return result;
};
